Database managning


SQLite
https://docs.microsoft.com/en-us/ef/core/get-started/netcore/new-db-sqlite

Create the database
Once you have a model, you can use migrations to create a database.
Navigate to Trustchain project 
Command line:
dotnet ef migrations add InitialCreate 
dotnet ef database update

Step by step
*. Open Package Manager Console
*. cd trustchain
*. Change default project to: TrustchainCore
*. Delete files in Migration folder under TrustchainCore
*. Delete trust.db in Trustchain project
*. Maybe restart Visual Studio
*. Add-Migration trust.db
*. Update-Database


New stuff
Add-Migration [Name]
Update-Database



Scaffold model
https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model


dotnet aspnet-codegenerator razorpage -m Workflows -dc TrustDBContext -udl -outDir Pages\Workflow --referenceScriptLibraries


dotnet aspnet-codegenerator razorpage -m ProofEntity -dc TrustDBContext -udl -outDir Pages\Proofs --referenceScriptLibraries


Configuration settings


TruststampCore
            Config["endpoint"] = IPAddress.Loopback.ToString();
            Config["port"] = 12700;
            Config["eventlog"] = !Environment.UserInteractive; // Activate event logger if no console is active.
            Config["test"] = false; // General test, no real data is stored, run in memory database!
            Config["partition"] = "yyyyMMddhhmm00"; // Create a new batch every hour.
            Config["processinterval"] = 1000 * 30; // 30 sec

            // Bitcoin
            Config["network"] = "TestNet";  // Bitcoin Private key in wif format
            Config["btcwif"] = "cMcGZkth7ufvQC59NSTSCTpepSxXbig9JfhCYJtn9RppU4DXx4cy"; // Test net key
            Config["btcfee"] = "0.0001";
            Config["remoteendpoint"] = ""; // Connect to a remote TrustStamp server
            Config["remoteport"] = 12700; // Connect to a remote TrustStamp server port


            Config["dbconnectionstring"] = "";  // Connection or dbfilename
            Config["dbfilename"] = "TrustStamp.db";
            Config["database"] = new JObject();
            Config["database"]["pooling"] = true;
            Config["database"]["cache"] = "shared";
            Config["database"]["syncmode"] = 0;
            Config["database"]["journalmode"] = -1;