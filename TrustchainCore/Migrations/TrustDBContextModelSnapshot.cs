// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;
using TrustchainCore.Repository;

namespace TrustchainCore.Migrations
{
    [DbContext(typeof(TrustDBContext))]
    partial class TrustDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("TrustchainCore.Model.HeadModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Script");

                    b.Property<string>("Version");

                    b.HasKey("ID");

                    b.ToTable("HeadModel");
                });

            modelBuilder.Entity("TrustchainCore.Model.IssuerModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("IssuerId");

                    b.Property<string>("Name");

                    b.Property<byte[]>("Signature");

                    b.Property<long>("Timestamp");

                    b.Property<int>("TrustModelID");

                    b.HasKey("ID");

                    b.HasIndex("TrustModelID")
                        .IsUnique();

                    b.ToTable("IssuerModel");
                });

            modelBuilder.Entity("TrustchainCore.Model.PackageModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("HeadID");

                    b.Property<byte[]>("ServerId");

                    b.HasKey("ID");

                    b.HasIndex("HeadID");

                    b.HasIndex("ServerId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("TrustchainCore.Model.ServerModel", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Signature");

                    b.HasKey("Id");

                    b.ToTable("ServerModel");
                });

            modelBuilder.Entity("TrustchainCore.Model.SubjectModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<uint>("Activate");

                    b.Property<string>("Claim");

                    b.Property<int>("Cost");

                    b.Property<uint>("Expire");

                    b.Property<string>("IdType");

                    b.Property<int>("IssuerModelID");

                    b.Property<string>("Scope");

                    b.Property<byte[]>("Signature");

                    b.Property<byte[]>("SubjectId");

                    b.Property<int>("Timestamp");

                    b.HasKey("ID");

                    b.HasIndex("IssuerModelID");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("TrustchainCore.Model.TimestampModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HashAlgorithm");

                    b.Property<int?>("PackageModelID");

                    b.Property<byte[]>("Path");

                    b.Property<int?>("TrustModelID");

                    b.HasKey("ID");

                    b.HasIndex("PackageModelID");

                    b.HasIndex("TrustModelID");

                    b.ToTable("TimestampModel");
                });

            modelBuilder.Entity("TrustchainCore.Model.TrustModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("HeadID");

                    b.Property<int>("PackageModelID");

                    b.Property<byte[]>("ServerId");

                    b.Property<byte[]>("TrustId");

                    b.HasKey("ID");

                    b.HasIndex("HeadID");

                    b.HasIndex("PackageModelID");

                    b.HasIndex("ServerId");

                    b.ToTable("Trust");
                });

            modelBuilder.Entity("TrustchainCore.Model.IssuerModel", b =>
                {
                    b.HasOne("TrustchainCore.Model.TrustModel")
                        .WithOne("Issuer")
                        .HasForeignKey("TrustchainCore.Model.IssuerModel", "TrustModelID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TrustchainCore.Model.PackageModel", b =>
                {
                    b.HasOne("TrustchainCore.Model.HeadModel", "Head")
                        .WithMany()
                        .HasForeignKey("HeadID");

                    b.HasOne("TrustchainCore.Model.ServerModel", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId");
                });

            modelBuilder.Entity("TrustchainCore.Model.SubjectModel", b =>
                {
                    b.HasOne("TrustchainCore.Model.IssuerModel")
                        .WithMany("Subjects")
                        .HasForeignKey("IssuerModelID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TrustchainCore.Model.TimestampModel", b =>
                {
                    b.HasOne("TrustchainCore.Model.PackageModel")
                        .WithMany("Timestamp")
                        .HasForeignKey("PackageModelID");

                    b.HasOne("TrustchainCore.Model.TrustModel")
                        .WithMany("Timestamp")
                        .HasForeignKey("TrustModelID");
                });

            modelBuilder.Entity("TrustchainCore.Model.TrustModel", b =>
                {
                    b.HasOne("TrustchainCore.Model.HeadModel", "Head")
                        .WithMany()
                        .HasForeignKey("HeadID");

                    b.HasOne("TrustchainCore.Model.PackageModel")
                        .WithMany("Trust")
                        .HasForeignKey("PackageModelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TrustchainCore.Model.ServerModel", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId");
                });
#pragma warning restore 612, 618
        }
    }
}
